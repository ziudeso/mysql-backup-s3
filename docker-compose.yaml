version: "3"
# this file is here to facilitate development/testing
# $ docker compose up -d --build --force-recreate

services:

  wp:
    image: wordpress:6-apache #fpm doesn't work
    container_name: wp
    security_opt:
      - no-new-privileges:true
    volumes:
      - ./wp_data:/var/www/html
      # here also is the memory limit!!!
      - ./uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
    networks:
      - traefik_default
    restart: unless-stopped
    environment:
      WORDPRESS_DB_HOST: wp-db
      WORDPRESS_DB_NAME: ${WORDPRESS_DB_NAME}
      WORDPRESS_DB_USER: ${WORDPRESS_DB_USER}
      WORDPRESS_DB_PASSWORD: ${WORDPRESS_DB_PASSWORD}
      WORDPRESS_DB_CHARSET: ${WORDPRESS_DB_CHARSET}
      WORDPRESS_DEBUG: 1
      #WORDPRESS_TABLE_PREFIX: $WORDPRESS_TABLE_PREFIX
    ports:
      - 8080:80
    
  wp2:
    image: wordpress:6-apache #fpm doesn't work
    container_name: wp2
    security_opt:
      - no-new-privileges:true
    volumes:
      - ./wp2_data:/var/www/html
      # here also is the memory limit!!!
      - ./uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
    restart: unless-stopped
    environment:
      WORDPRESS_DB_HOST: wp-db
      WORDPRESS_DB_NAME: ${WORDPRESS_DB_NAME2}
      WORDPRESS_DB_USER: ${WORDPRESS_DB_USER2}
      WORDPRESS_DB_PASSWORD: ${WORDPRESS_DB_PASSWORD2}
      WORDPRESS_DB_CHARSET: ${WORDPRESS_DB_CHARSET2}
      WORDPRESS_DEBUG: 1
      #WORDPRESS_TABLE_PREFIX: $WORDPRESS_TABLE_PREFIX
    ports:
      - 8081:80
    networks:
      - traefik_default

  wp-db:
    image: mariadb:11
    container_name: wp-db
    security_opt:
      - no-new-privileges:true
      - seccomp:unconfined
    volumes:
      - ./db_data:/var/lib/mysql
    restart: unless-stopped
    # ports:
    #   - $MYSQL_PORT:$MYSQL_PORT
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: admin
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MARIADB_AUTO_UPGRADE: "1"
      MARIADB_INITDB_SKIP_TZINFO: "1"
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - traefik_default

  ############################################################### Backups
  # Get image version: docker inspect <image_name_or_ID> | grep -E '"(Hostname|com.docker.compose.service|com.docker.compose.project.working_dir|org.opencontainers.image.title|org.opencontainers.image.version)"' -A 1
  mysql-backup-wp1:
    container_name: mysql-backup-wp1
    build:
      context: .
      args:
        MARIADB_VERSION: '11'
        # TARGETARCH: "linux/amd64"
        TARGETARCH: "linux/arm64"
    environment:
      - AWS_ACCESS_KEY_ID=${S3_ACCESS_KEY}
      - AWS_SECRET_ACCESS_KEY=${S3_SECRET_KEY}
      - AWS_DEFAULT_REGION=${S3_REGION}
      - AWS_REGION=${S3_REGION}
      - S3_BUCKET=${S3_BUCKET_NAME}
      - S3_PREFIX=${BACKUP_PREFIX}/${WORDPRESS_DB_NAME}
      # Variabili MySQL
      - MYSQL_HOST=wp-db
      - MYSQL_DATABASE=${WORDPRESS_DB_NAME}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_PORT=3306
      - SCHEDULE=@every 3m
      - BACKUP_KEEP_DAYS=14
      - PASSPHRASE=${MYSQL_PASSWORD}
    networks:
      - traefik_default

  mysql-backup-wp2:
    container_name: mysql-backup-wp2
    build:
      context: .
      args:
        MARIADB_VERSION: '11'
        TARGETARCH: "linux/arm64"
    environment:
      - AWS_ACCESS_KEY_ID=${S3_ACCESS_KEY}
      - AWS_SECRET_ACCESS_KEY=${S3_SECRET_KEY}
      - AWS_DEFAULT_REGION=${S3_REGION}
      - AWS_REGION=${S3_REGION}
      - S3_BUCKET=${S3_BUCKET_NAME}
      - S3_PREFIX=${BACKUP_PREFIX}/${WORDPRESS_DB_NAME2}
      # Variabili MySQL
      - MYSQL_HOST=wp-db
      - MYSQL_DATABASE=${WORDPRESS_DB_NAME2}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_PORT=3306
      - SCHEDULE=@every 5m
      - BACKUP_KEEP_DAYS=14
      - PASSPHRASE=${MYSQL_PASSWORD}
    networks:
      - traefik_default


# volumes:
#   mysql_data:

networks:
  traefik_default:
    external: true
