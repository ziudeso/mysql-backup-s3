# this file is here to facilitate development/testing
# $ docker compose up -d --build --force-recreate

services:
  mysql:
    image: mysql:8
    command: ["mysqld", "--mysql-native-password=ON"]
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: test
      MYSQL_ROOT_HOST: '%'
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-ppassword"]
      interval: 5s
      timeout: 5s
      retries: 5

  backup:
    build:
      context: .
      args:
        ALPINE_VERSION: '3.16'
    environment:
      - SCHEDULE=@weekly
      - BACKUP_KEEP_DAYS=7
      - PASSPHRASE=${PASSPHRASE}
      # AWS credentials
      - S3_ACCESS_KEY_ID=${S3_ACCESS_KEY_ID}
      - S3_SECRET_ACCESS_KEY=${S3_SECRET_ACCESS_KEY}
      - S3_REGION=${S3_REGION}
      # S3 configuration
      - S3_BUCKET=${S3_BUCKET}
      - S3_PREFIX=${S3_PREFIX}
      # MySQL configuration
      - MYSQL_HOST=mysql
      - MYSQL_DATABASE=test
      - MYSQL_USER=backup_user
      - MYSQL_PASSWORD=password
      - MYSQL_PORT=3306
      - MYSQLDUMP_EXTRA_OPTS="--protocol=TCP --skip-opt --add-drop-database --add-drop-table"
    depends_on:
      mysql:
        condition: service_healthy

volumes:
  mysql_data:
